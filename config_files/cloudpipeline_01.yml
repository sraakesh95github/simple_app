AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for building and deploying a React app to an existing S3 bucket as a static website.

Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: 'OAuth token for GitHub to access the repository.'

  GitHubBranch:
    Type: String
    Default: 'main'
    Description: 'The branch of the GitHub repository to build from.'

  FrontEndBucket:
    Type: String
    Default: 'front-buckets3'
    Description: 'The branch of the GitHub repository to build from.'


Resources:
  # S3 Bucket (already existing) for hosting the static website
  # FrontEndBucket:
  #   Type: 'AWS::S3::Bucket'
  #   Properties:
  #     BucketName: 'front-buckets3-01'

  # Artifact Bucket for CodePipeline (temporary storage for build artifacts for the github project)
  ArtifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: 'react-build-artifacts-bucket-test123'
      AccessControl: 'Private'

  # IAM Role for CodePipeline
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'codepipeline.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'CodePipelinePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                  - 'codebuild:*'
                  - 'logs:*'
                Resource: '*'

  # IAM Role for CodeBuild
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'codebuild.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'CodeBuildPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 's3:*'
                  - 'logs:*'
                Resource: '*'

  # CodeBuild Project for building the React app , that will contain the CI CD pipelines
  ReactBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: 'ReactBuildProject'
      Source:
        Type: 'CODEPIPELINE'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/standard:7.0'  # Standard Node.js environment for React builds
        Type: 'LINUX_CONTAINER'
        EnvironmentVariables:
          - Name: 'NODE_ENV'
            Value: 'development'
      ServiceRole: !GetAtt CodeBuildRole.Arn

  # CodePipeline
  ReactPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: 'ReactAppPipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub_Source
              ActionTypeId:
                Category: 'Source'
                Owner: 'ThirdParty'
                Provider: 'GitHub'
                Version: '1'
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: 'mayssa2026'
                Repo: 'cloud_project'
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken    #after forking, put the token
              RunOrder: 1
        - Name: Build  #here it access the buildspec.yml 
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Provider: 'CodeBuild'
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref ReactBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: S3Deploy
              ActionTypeId:
                Category: 'Deploy'
                Owner: 'AWS'
                Provider: 'S3'
                Version: '1'
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                BucketName: !Ref FrontEndBucket
                Extract: 'true'
              RunOrder: 1

Outputs:
  PipelineName:
    Description: 'Name of the CodePipeline'
    Value: !Ref ReactPipeline

  WebsiteURL:
    Description: 'The URL of the static website hosted in S3'
    Value: !Sub 'http://${FrontEndBucket}.s3-website-${AWS::Region}.amazonaws.com'
